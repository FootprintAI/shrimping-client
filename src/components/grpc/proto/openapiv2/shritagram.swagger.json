{
  "swagger": "2.0",
  "info": {
    "title": "Shritagram API Documentations",
    "version": "1.0",
    "contact": {
      "name": "shritagram restapi documentation",
      "url": "https://github.com/footprintai/shrimping-client",
      "email": "shrimping@footprint-ai.com"
    },
    "license": {
      "name": "BSD 3-Clause License",
      "url": "https://github.com/footprintai/shrimping-client/blob/master/LICENSE.txt"
    }
  },
  "tags": [
    {
      "name": "shritagram"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/callback:stream": {
      "post": {
        "operationId": "shritagram_Callback",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/pbShritagramResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of pbShritagramResponse"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCallbackRequest"
            }
          }
        ],
        "tags": [
          "shritagram"
        ]
      }
    },
    "/v1/posts:get": {
      "post": {
        "operationId": "shritagram_Posts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbShritagramResponse"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbPostRequest"
            }
          }
        ],
        "tags": [
          "shritagram"
        ]
      }
    },
    "/v1/profiles:get": {
      "post": {
        "operationId": "shritagram_Profile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbShritagramResponse"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbProfileRequest"
            }
          }
        ],
        "tags": [
          "shritagram"
        ]
      }
    },
    "/v1/topsearchs:get": {
      "post": {
        "operationId": "shritagram_TopSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbShritagramResponse"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbTopSearchRequest"
            }
          }
        ],
        "tags": [
          "shritagram"
        ]
      }
    }
  },
  "definitions": {
    "pbCallbackRequest": {
      "type": "object"
    },
    "pbObjectCompressionAlgorithm": {
      "type": "string",
      "enum": [
        "NONE",
        "GZIP"
      ],
      "default": "NONE"
    },
    "pbPostRequest": {
      "type": "object",
      "properties": {
        "shortcodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cacheControl": {
          "type": "string",
          "description": "default value is  max-age=86400",
          "title": "cacheControl has possible values:\nno-cache: the request won't go through backend server's cache, it is revalidated with the actualy service (i.g. instagram) \nmax-age=604800: the request's result will be kept in cache with the duration(in s) specified"
        },
        "priority": {
          "type": "string",
          "description": "priority has three possible values: high/median/low.\nthe server will execute jobs according to its priority."
        }
      }
    },
    "pbProfileRequest": {
      "type": "object",
      "properties": {
        "usernames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cacheControl": {
          "type": "string",
          "description": "default value is  max-age=86400",
          "title": "cacheControl has possible values:\nno-cache: the request won't go through backend server's cache, it is revalidated with the actualy service (i.g. instagram) \nmax-age=604800: the request's result will be kept in cache with the duration(in s) specified"
        },
        "priority": {
          "type": "string",
          "description": "priority has three possible values: high/median/low.\nthe server will execute jobs according to its priority."
        }
      }
    },
    "pbRawPostObject": {
      "type": "object",
      "properties": {
        "shortcode": {
          "type": "string"
        },
        "rawBytes": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "pbRawProfileObject": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "rawBytes": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "pbRawTopSearchObject": {
      "type": "object",
      "properties": {
        "hashtag": {
          "type": "string"
        },
        "rawBytes": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "pbShritagramResponse": {
      "type": "object",
      "properties": {
        "compression": {
          "$ref": "#/definitions/pbObjectCompressionAlgorithm"
        },
        "rawProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbRawProfileObject"
          }
        },
        "rawPosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbRawPostObject"
          }
        },
        "rawTopSearchs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbRawTopSearchObject"
          }
        }
      }
    },
    "pbTopSearchRequest": {
      "type": "object",
      "properties": {
        "hashtags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cacheControl": {
          "type": "string",
          "description": "default value is  max-age=86400",
          "title": "cacheControl has possible values:\nno-cache: the request won't go through backend server's cache, it is revalidated with the actualy service (i.g. instagram) \nmax-age=604800: the request's result will be kept in cache with the duration(in s) specified"
        },
        "priority": {
          "type": "string",
          "description": "priority has three possible values: high/median/low.\nthe server will execute jobs according to its priority."
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "externalDocs": {
    "description": "shritagram restapi",
    "url": "https://github.com/footprintai/shrimping-client"
  }
}
